#==============================================================================
# Makefile macros for generic test machine, intel compiler
#==============================================================================

CPP        := fpp
CPPDEFS    := -DFORTRANUNDERSCORE -DNO_R16 -DHAVE_F2008_CONTIGUOUS -DLINUX -DCPRINTEL ${ICE_CPPDEFS}
CFLAGS     := -c -g -traceback -check bounds -fp-model precise   -xHost -mcmodel=large
#CFLAGS     := -c -O3 -fp-model precise   -xHost -mcmodel=large

FIXEDFLAGS := -132
FREEFLAGS  := -FR
FFLAGS     := -g -traceback -check bounds -fp-model precise -assume byterecl -ftz  -xHost -mcmodel=large
#FFLAGS     := -fp-model precise -convert big_endian -assume byterecl -ftz -traceback   -xHost -mcmodel=large
FFLAGS_NOOPT:= -O0

ifeq ($(ICE_BLDDEBUG), true)
  FFLAGS     += -O0 -g -check uninit -check bounds -check pointers -fpe0 -check noarg_temp_created
else
  FFLAGS     += -O3
endif

ifeq ($(ICE_COMMDIR), mpi)
  FC         := mpif90
else
  FC         := ifort
endif

MPICC:= mpicc

MPIFC:= mpif90
LD:= $(MPIFC)

LDFLAGS +=-L/mnt/projects/hpc/fujisaki/local/gptl/lib
LDFLAGS +=-L/mnt/projects/hpc/fujisaki/ESMF/8_0_0bs48/lib/libO/Linux.intel.64.mvapich2.default/
#LDFLAGS +=-L/mnt/projects/hpc/fujisaki/ESMF/8_0_0bs48/lib/libO/Linux.intel.64.mvapich2.default/
#LDFLAGS +=-L/mnt/projects/hpc/fujisaki/ESMF/lib/libO/Linux.intel.64.mvapich2.default/
#LDFLAGS +=-L/mnt/projects/hpc/fujisaki/ESMF/lib/libO/Linux.intel.64.mvapich2.default
#INCLDIR +=-I/mnt/projects/hpc/fujisaki/local/gptl/include

NETCDF :=/mnt/projects/hpc/fujisaki/local/netcdf/
NETCDF_PATH := $(NETCDF)
#NETCDF_PATH := /mnt/projects/hpc/fujisaki/fvcom/codes/FVCOM4.3.1_icealbedo/FVCOM_source/libs/install/ 

PIO_CONFIG_OPTS:= --enable-filesystem-hints=gpfs 

PNETCDF := /mnt/projects/hpc/fujisaki/local/pnetcdf/
PNETCDF_PATH := $(PNETCDF)
#PNETCDF_PATH := /glade/u/apps/ch/opt/pio/2.2/mpt/2.15f/intel/17.0.1/lib

#INCLDIR := $(INCLDIR)
INCLDIR := -I$(NETCDF_PATH)/include
#INCLDIR +=-I/mnt/projects/hpc/fujisaki/ESMF/mod/modO/Linux.intel.64.mvapich2.default
#INCLDIR +=-I/mnt/projects/hpc/fujisaki/ESMF/8_0_0bs48/mod/modO/Linux.intel.64.mvapich2.default/
INCLDIR +=-I/mnt/projects/hpc/fujisaki/ESMF/esmf-ESMF_8_0_1/mod/modO/Linux.intel.64.mvapich2.default/

LIB_NETCDF := $(NETCDF_PATH)/lib
LIB_PNETCDF := $(PNETCDF_PATH)/lib
LIB_MPI := $(IMPILIBDIR)

SLIBS   := -L$(LIB_NETCDF) -lnetcdf -lnetcdff -L$(LIB_PNETCDF) -lpnetcdf -lgptl -lesmf
#SLIBS   := -L$(LIB_NETCDF) -lnetcdf -lnetcdff -L$(LIB_PNETCDF) -lpnetcdf -lgptl



SCC:= icc 

SFC:= ifort 

ifeq ($(compile_threaded), true) 
   LDFLAGS += -qopenmp 
   CFLAGS += -qopenmp 
   FFLAGS += -qopenmp 
endif

ifeq ($(DITTO), yes)
   CPPDEFS :=  $(CPPDEFS) -DREPRODUCIBLE
endif

### if using parallel I/O, load all 3 libraries.  PIO must be first!
ifeq ($(IO_TYPE), pio)
   PIO_PATH:=/glade/u/apps/ch/opt/pio/2.2/mpt/2.15f/intel/17.0.1/lib
   INCLDIR += -I/glade/u/apps/ch/opt/pio/2.2/mpt/2.15f/intel/17.0.1/include
   SLIBS   := $(SLIBS) -L$(PIO_PATH) -lpiof

   CPPDEFS :=  $(CPPDEFS) -Dncdf
endif

ifeq ($(IO_TYPE), netcdf)
   CPPDEFS :=  $(CPPDEFS) -Dncdf
endif
